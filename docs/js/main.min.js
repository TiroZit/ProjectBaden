"use strict";

var mediaQuery = window.matchMedia("(max-width: 991px)"),
    mediaQuery2 = window.matchMedia("(min-width: 991px)"),
    hiddenMenu = document.querySelector(".header__menu"),
    navMenu = document.querySelector(".main-menu"),
    cloneMenu = document.querySelector(".main-menu").cloneNode(!0);
var btn = document.querySelector(".header__menu-item--services"),
    menu = 0,
    mediaMode = 0;
var burger = document.querySelector(".burger-menu");

if (burger) {
  var e = document.querySelector(".header");
  burger.addEventListener("click", function (n) {
    0 == menu ? (document.body.classList.toggle("lock"), burger.classList.toggle("open"), burger.classList.toggle("burger-menu--open"), e.classList.toggle("open")) : (cloneMenu.classList.toggle("open"), burger.classList.toggle("burger-menu--open2"), burger.classList.toggle("burger-menu--open"), menu = 0);
  });
}

function handleTabletChange(e) {
  e.matches && (document.querySelector(".main-menu").replaceWith(hiddenMenu), hiddenMenu.style.display = "", mediaMode = 1);
}

function handleTabletChange2(e) {
  e.matches && 1 == mediaMode && (console.log(navMenu), document.querySelector(".header__menu").replaceWith(navMenu), mediaMode = 0);
}

btn.addEventListener("click", function (e) {
  0 == menu && (document.querySelector("body").append(cloneMenu), setTimeout(function () {
    cloneMenu.classList.toggle("open");
  }, 0), burger.classList.toggle("burger-menu--open"), burger.classList.toggle("burger-menu--open2"), menu = 1);
}), mediaQuery2.addListener(handleTabletChange2), handleTabletChange2(mediaQuery2), mediaQuery.addListener(handleTabletChange), handleTabletChange(mediaQuery);
"use strict";

var lazyImages = document.querySelectorAll("img[data-src],source[data-srcset]"),
    loadMapBlock = document.querySelector("._load-map"),
    windowHeight = document.documentElement.clientHeight;
var lazyImagesPositions = [];

function lazyScroll() {
  document.querySelectorAll("img[data-src],source[data-srcset]").length > 0 && lazyScrollCheck();
}

function lazyScrollCheck() {
  var e = lazyImagesPositions.findIndex(function (e) {
    return pageYOffset > e - windowHeight;
  });
  e >= 0 && (lazyImages[e].dataset.src ? (lazyImages[e].src = lazyImages[e].dataset.src, lazyImages[e].removeAttribute("data-src")) : lazyImages[e].dataset.srcset && (lazyImages[e].srcset = lazyImages[e].dataset.srcset, lazyImages[e].removeAttribute("data-srcset")), delete lazyImagesPositions[e]);
}

lazyImages.length > 0 && lazyImages.forEach(function (e) {
  (e.dataset.src || e.dataset.srcset) && (lazyImagesPositions.push(e.getBoundingClientRect().top + pageYOffset), lazyScrollCheck());
}), window.addEventListener("scroll", lazyScroll);
"use strict";

var gallerySlider = new Swiper(".gallery__slider", {
  simulateTouch: !1,
  loop: !1,
  speed: 500,
  slidesPerView: "auto",
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  }
});
"use strict";

var leisureSlider = new Swiper(".leisure__slider", {
  simulateTouch: !1,
  loop: !0,
  speed: 300,
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  }
});
"use strict";

var mainSlider = new Swiper(".main-slider__container", {
  grabCursor: !0,
  loop: !0,
  speed: 500,
  pagination: {
    el: ".swiper-pagination",
    clickable: !0,
    renderBullet: function renderBullet(i, e) {
      return '<div class="swiper-pagination-bullet"><div></div></div>';
    }
  },
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  }
});
"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

document.querySelectorAll(".faq__question").forEach(function (e) {
  return e.addEventListener("click", function () {
    e.classList.toggle("open");
  });
});
var spoilers = document.querySelectorAll(".booking__item");

var _iterator = _createForOfIteratorHelper(spoilers),
    _step;

try {
  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    item = _step.value;
    item.addEventListener("click", function () {
      if (this.classList.contains("open")) this.classList.remove("open");else {
        var _iterator2 = _createForOfIteratorHelper(spoilers),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            el = _step2.value;
            el.classList.remove("open");
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        this.classList.add("open");
      }
    });
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}
"use strict";

document.querySelectorAll(".tabs__link--gallery").forEach(function (e) {
  return e.addEventListener("click", function (t) {
    t.preventDefault();
    var l = t.target.getAttribute("href").replace("#", "");
    document.querySelectorAll(".tabs__link--gallery").forEach(function (e) {
      return e.classList.remove("active1");
    }), document.querySelectorAll(".leisure__list").forEach(function (e) {
      return e.classList.remove("active1");
    }), e.classList.add("active1"), document.getElementById(l).classList.add("active1");
  });
}), document.querySelector(".tabs__link--gallery").click();
"use strict";

document.querySelectorAll(".tabs__link--leisure").forEach(function (e) {
  return e.addEventListener("click", function (t) {
    t.preventDefault();
    var c = t.target.getAttribute("href").replace("#", "");
    document.querySelectorAll(".tabs__link--leisure").forEach(function (e) {
      return e.classList.remove("active");
    }), document.querySelectorAll(".leisure__list").forEach(function (e) {
      return e.classList.remove("active");
    }), e.classList.add("active"), document.getElementById(c).classList.add("active");
  });
}), document.querySelector(".tabs__link--leisure").click();
"use strict";